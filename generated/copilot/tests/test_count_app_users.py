# GENERATED FILE - DO NOT EDIT DIRECTLY.
# Prompt: count_app_users.txt  Version: 1.1
# Generated by: Microsoft Copilot (GPT-4)
# Timestamp: 2025-09-01T23:47:00Z

import pytest
import pandas as pd
from count_app_users import count_app_users


def test_valid_input_single_column():
    df = pd.DataFrame({'Teams': [1, 0, 1, 1]})
    result = count_app_users(df)
    assert isinstance(result, list)
    assert result[0]['app'] == 'Teams'
    assert result[0]['nusers'] == 3
    assert result[0]['percusers'] == 0.75


def test_valid_input_multiple_columns():
    df = pd.DataFrame({
        'Teams': [1, 0, 1],
        'Outlook': [0, 0, 1],
        'OneDrive': [1, 1, 1]
    })
    result = count_app_users(df)
    expected = [
        {'app': 'Teams', 'nusers': 2, 'percusers': 2 / 3},
        {'app': 'Outlook', 'nusers': 1, 'percusers': 1 / 3},
        {'app': 'OneDrive', 'nusers': 3, 'percusers': 1.0}
    ]
    for i in range(len(expected)):
        assert result[i]['app'] == expected[i]['app']
        assert result[i]['nusers'] == expected[i]['nusers']
        assert round(result[i]['percusers'], 4) == round(expected[i]['percusers'], 4)


def test_empty_dataframe():
    df = pd.DataFrame()
    with pytest.raises(ValueError, match="Input DataFrame must not be empty and must contain at least one column."):
        count_app_users(df)


def test_invalid_input_type():
    with pytest.raises(TypeError, match="Input must be a pandas DataFrame."):
        count_app_users("not a dataframe")


def test_dataframe_with_non_numeric_column():
    df = pd.DataFrame({'Teams': ['yes', 'no', 'yes']})
    with pytest.raises(RuntimeError, match="Failed to compute usage for column 'Teams'"):
        count_app_users(df)


def test_dataframe_with_nan_values():
    df = pd.DataFrame({'Teams': [1, None, 0, 1]})
    result = count_app_users(df)
    assert result[0]['app'] == 'Teams'
    assert result[0]['nusers'] == 2
    assert result[0]['percusers'] == 0.5
