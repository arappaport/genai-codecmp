# GENERATED FILE - DO NOT EDIT DIRECTLY.
# Prompt: calc_app_usage_metrics.txt  Version: 1.1
# Generated by: Microsoft Copilot (GPT-4)
# Timestamp: 2025-09-01T23:31:00Z

import pytest
import pandas as pd
from calc_app_usage_metrics import calc_app_usage_metrics


def test_valid_input_transformation():
    data = {
        'User Principal Name': ['user1', 'user2'],
        'Last activity date of Teams (UTC)': ['2025-08-01', None],
        'Last activity date of Outlook (UTC)': ['', '2025-08-02'],
        'Other Column': ['ignore', 'me']
    }
    df = pd.DataFrame(data)
    result = calc_app_usage_metrics(df)

    assert list(result.columns) == ['User Principal Name', 'Teams', 'Outlook']
    assert result.shape == (2, 3)
    assert result['Teams'].tolist() == [0, 0]
    assert result['Outlook'].tolist() == [0, 0]


def test_multiple_entries_per_user():
    data = {
        'User Principal Name': ['user1', 'user1'],
        'Last activity date of OneDrive (UTC)': [None, '2025-08-03']
    }
    df = pd.DataFrame(data)
    result = calc_app_usage_metrics(df)

    assert result.shape == (1, 2)
    assert result['OneDrive'].iloc[0] == 0


def test_missing_required_column():
    df = pd.DataFrame({'Email': ['user@example.com']})
    with pytest.raises(ValueError, match="Missing required column: 'User Principal Name'"):
        calc_app_usage_metrics(df)


def test_empty_dataframe():
    df = pd.DataFrame(columns=['User Principal Name'])
    with pytest.raises(ValueError, match="Input DataFrame must not be empty."):
        calc_app_usage_metrics(df)


def test_invalid_input_type():
    with pytest.raises(TypeError, match="Input must be a pandas DataFrame."):
        calc_app_usage_metrics("not a dataframe")


def test_no_activity_columns():
    df = pd.DataFrame({'User Principal Name': ['user1'], 'Random Column': ['value']})
    result = calc_app_usage_metrics(df)
    assert list(result.columns) == ['User Principal Name']
    assert result.shape == (1, 1)