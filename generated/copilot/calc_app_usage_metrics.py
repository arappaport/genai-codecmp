# GENERATED FILE - DO NOT EDIT DIRECTLY.
# Prompt: calc_app_usage_metrics.txt  Version: 1.1
# Generated by: Microsoft Copilot (GPT-4)
# Timestamp: 2025-08-17T23:31:00Z

from typing import Any
import pandas as pd


def calc_app_usage_metrics(df: pd.DataFrame) -> pd.DataFrame:
    """Calculate application usage metrics from activity date columns.

    Args:
        df (pd.DataFrame): Input DataFrame containing 'User Principal Name' and activity date columns.

    Returns:
        pd.DataFrame: Transformed DataFrame with binary usage indicators per app.

    Raises:
        TypeError: If input is not a pandas DataFrame.
        ValueError: If DataFrame is empty or missing required columns.
    """
    if not isinstance(df, pd.DataFrame):
        raise TypeError("Input must be a pandas DataFrame.")

    if df.empty:
        raise ValueError("Input DataFrame must not be empty.")

    if 'User Principal Name' not in df.columns:
        raise ValueError("Missing required column: 'User Principal Name'.")

    col_prefix = 'Last activity date of '
    col_postfix = ' (UTC)'

    df_apps = df.copy()

    # Filter relevant columns
    valid_columns = ['User Principal Name'] + [
        col for col in df_apps.columns
        if col.startswith(col_prefix) and col.endswith(col_postfix)
    ]
    df_apps = df_apps[valid_columns]

    # Aggregate max per user
    df_apps = df_apps.groupby('User Principal Name', as_index=False).max()

    # Transform activity columns
    for col in df_apps.columns:
        if col == 'User Principal Name':
            continue

        # Replace non-blank values with 1, then convert 1s to 0
        df_apps[col] = df_apps[col].apply(lambda x: 1 if pd.notna(x) and str(x).strip() != '' else 0)
        df_apps[col] = df_apps[col].replace(1, 0)

        # Rename column
        new_col_name = col[len(col_prefix):-len(col_postfix)]
        df_apps.rename(columns={col: new_col_name}, inplace=True)

    return df_apps
