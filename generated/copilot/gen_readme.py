# GENERATED FILE - DO NOT EDIT DIRECTLY.
# Prompt: gen_readme.txt  Version: 1.0
# Generated by: Copilot v1.0
# Timestamp: 2025-08-16T17:00:00Z

from typing import Any, List
import pandas as pd


def gen_readme_df(values: List[List[Any]]) -> pd.DataFrame:
    """Generate a README DataFrame from a matrix of values.

    Each sublist in `values` must contain exactly three elements,
    corresponding to the README, Value, and Notes columns.

    Args:
        values: A non-empty list of lists, each inner list of length three.
                None entries will be converted to empty strings. All entries
                are cast to string via str().

    Returns:
        A pandas DataFrame with columns ["README", "Value", "Notes"].

    Raises:
        TypeError: If `values` is not a list of lists.
        ValueError: If `values` is empty or any row does not have exactly
                    three elements.
    """
    # Validate outer structure
    if not isinstance(values, list):
        raise TypeError("values must be a list of lists")
    if not values:
        raise ValueError("values must not be empty")

    # Prepare rows for DataFrame
    rows = []
    for idx, row in enumerate(values):
        if not isinstance(row, list):
            raise TypeError(f"Row {idx} is not a list")
        if len(row) != 3:
            raise ValueError(f"Row {idx} does not have exactly three elements")
        # Convert and sanitize each cell
        sanitized = []
        for cell in row:
            if cell is None:
                sanitized.append("")
            else:
                sanitized.append(str(cell))
        rows.append(sanitized)

    # Construct DataFrame
    df_readme = pd.DataFrame(
        rows,
        columns=["README", "Value", "Notes"]
    )
    return df_readme