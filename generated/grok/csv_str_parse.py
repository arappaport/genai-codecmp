# GENERATED FILE - DO NOT EDIT DIRECTLY.
# Prompt: csv_str_parse.txt  Version: 1.0
# Generated by: Grok, created by xAI
# Timestamp: 2025-09-02T00:10:00Z

from typing import List
import csv
import io


def parse_csv_str(s: str | None) -> List[str]:
    """Parse a CSV-formatted string into a list of strings.

    Args:
        s (str | None): Input string in CSV format, or None.

    Returns:
        List[str]: List of strings with outer quotes and whitespace removed.

    Raises:
        TypeError: If the input is not a string or None.
    """
    if s is None or s.strip() == "":
        return []

    if not isinstance(s, str):
        raise TypeError("Input 's' must be a string or None")

    # Use CSV reader to handle proper CSV parsing
    csv_reader = csv.reader(io.StringIO(s))

    # Get the first row (assuming single row input)
    try:
        elements = next(csv_reader)
    except StopIteration:
        return []

    # Process each element: remove quotes and strip whitespace
    processed_elements = []
    for element in elements:
        # Remove outer single or double quotes
        cleaned = element.strip()
        for quote in ("'", '"'):
            if cleaned.startswith(quote) and cleaned.endswith(quote) and len(cleaned) >= 2:
                cleaned = cleaned[1:-1]
        processed_elements.append(cleaned.strip())

    return processed_elements
