# GENERATED FILE - DO NOT EDIT DIRECTLY.
# Prompt: strip_quotes.txt  Version: 1.0
# Generated by: Grok built by xAI
# Timestamp: 2025-08-17T16:36:00Z

import pytest
from strip_quotes import strip_quotes

def test_strip_single_quotes():
    """Test removal of single quotes."""
    assert strip_quotes("'hello'") == "hello"
    assert strip_quotes("'test case'") == "test case"

def test_strip_double_quotes():
    """Test removal of double quotes."""
    assert strip_quotes('"hello"') == "hello"
    assert strip_quotes('"test case"') == "test case"

def test_strip_triple_single_quotes():
    """Test removal of triple single quotes."""
    assert strip_quotes("'''hello'''") == "hello"
    assert strip_quotes("'''test case'''") == "test case"

def test_strip_triple_double_quotes():
    """Test removal of triple double quotes."""
    assert strip_quotes('"""hello"""') == "hello"
    assert strip_quotes('"""test case"""') == "test case"

def test_no_quotes():
    """Test string without quotes."""
    assert strip_quotes("hello") == "hello"
    assert strip_quotes("test case") == "test case"

def test_empty_string():
    """Test empty string input."""
    assert strip_quotes("") == ""

def test_none_input():
    """Test None input."""
    assert strip_quotes(None) == ""

def test_invalid_type():
    """Test error handling for non-string input."""
    with pytest.raises(TypeError, match="Input must be a string or None"):
        strip_quotes(123)
    with pytest.raises(TypeError, match="Input must be a string or None"):
        strip_quotes(["hello"])

def test_mismatched_quotes():
    """Test string with mismatched quotes."""
    assert strip_quotes("'hello\"") == "'hello\""
    assert strip_quotes("'''hello\"") == "'''hello\""

def test_nested_quotes():
    """Test string with nested quotes."""
    assert strip_quotes("'hello \"world\"'") == "hello \"world\""
    assert strip_quotes('"""hello \'world\'"""') == "hello 'world'"

def test_single_quote_types():
    """Test string with only one type of quote."""
    assert strip_quotes("'hello") == "'hello"
    assert strip_quotes('hello"') == 'hello"'