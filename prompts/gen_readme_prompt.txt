# Parameters:
prompt_name = "gen_readme.txt"
version = "1.0"
target_function_name: "gen_readme_df"

Write a production-grade Python function named {{target_function_name}} accepts:
1. a list of lists named values.  It should not be empty. Treat this like a matrix.


The function should:
- Create a new DataFrame named `df_readme` with three columns: README, Value and Notes.
- Before adding to df_readme, convert None to '' and use str()
- The values of the README column will be all of the values in the first column of the matrix,
- The values of the Value column will be all of the values in the second column of the matrix.
- The values of the Notes column will be all of the values in the third column of the matrix.
- error handling.   Any issues should result in raised exceptions with suitable error strings

Generate comprehensive pytests for all negative and positive cases suitable for a file named test_{{target_function_name}}.py


#### COMMON instructions BEGIN

The function must follow current Python best practices, including:
- Type hints for input and output
- A docstring formatted with Google-style conventions
- Input validation: raise `TypeError` if inputs do not match type hints
- Clear and descriptive variable names
- PEP 8 formatting and clean structure
- Ready for inclusion in a larger codebase or module
- Ensure that all required parameters are present and are of the correct python type
- Generated code should pass Pylint with a score of 9.0+ and avoid global variables
  - display pylint score after generation
At the top of every file generated, include a comment block with:
  - GENERATED FILE - DO NOT EDIT DIRECTLY.
  - Prompt: [prompt_name]  Version: [version]
  - Generated by:[LLM name and version].
  - Timestamp:[current time in ISO 8601 format and UTC timezone]
#### COMMON instructions END
